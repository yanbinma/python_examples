import numpy as np
import matplotlib.pyplot as plt

num=200
# test 100 times, starting from 0 
def isMandelbrotSet(cn):
    z = 0
    for i in range(100):
        z = z**2 + cn
        if abs(z.real)>2.0 or abs(z.imag)>2.0:
            return False
    return True

# given a rectangle, draw in the area
def calcCoordinatesInRect(x1,x2,y1,y2):
    xlist=[]
    ylist=[]
    A=np.linspace(x1, x2, num)
    B=np.linspace(y1, y2, num)
    for x in range(0, num):
        for y in range(0, num):
            if isMandelbrotSet(complex(A[x],B[y])):
                xlist.append(A[x])
                ylist.append(B[y])
    return xlist, ylist                

def drawInRect(x1,x2,y1,y2):
    xlist, ylist = calcCoordinatesInRect(x1,x2,y1,y2)
    plt.scatter(xlist, ylist)
    plt.show()

# test all complex numbers within (-2:2, -2:2)

def onBoundChange(ax):
    ax.set_autoscale_on(False)
    vl = ax.viewLim
    drawInRect(vl.x0,vl.x1,vl.y0,vl.y1)
    
plt.gca().callbacks.connect('xlim_changed', onBoundChange)
plt.gca().callbacks.connect('ylim_changed', onBoundChange)

plt.title("Mandelbrot Set")
drawInRect(-2,2,-2,2)
